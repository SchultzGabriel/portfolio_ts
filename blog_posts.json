[
  {
    "title": "Operadores matemáticos em JavaScript",
    "type": "post",
    "date": "27/12/21",
    "slug": "matematica-javascript",
    "tags": ["JavaScript", "dicas"],
    "html": "<p>Muitos se perguntam qual é o nível desejável de conhecimento em matemática para se trabalhar com programação. Por sorte o dev JavaScript tem disponível uma caixa de ferramentas matemáticas, basta saber usá-las.</p><p>Compreender o funcionamento das funções matemáticas em JavaScript pode te salvar de muitas enrascadas, principalmente porque elas surgem quando menos esperamos.</p><p>Não é que você precise saber com exatidão o que cada um dos métodos matemáticos faz, mas é importante sempre ter em mente a questão “existe algum método que possa me ajudar nesse problema?”</p><p>Lembro-me de quando fui desafiado por uma empresa a criar uma lista de itens com paginação (dessas usadas pelo google, por exemplo) e filtros. Os filtros foram rapidamente concluídos, mas a paginação se tornou uma dor de cabeça pois, sempre que eu usava os métodos que eu já conhecia, sempre faltava uma página no fim, ocultando alguns itens.</p><p>De tanto quebrar a cabeça, comecei a pesquisar pedaços de código na internet que me ajudassem a resolver essa desgraça em minha vida e, quando me deparei com a resolução, percebi que a única diferença entre meu código e o do autor é que, enquanto eu usava um Math.round(), ele usava <strong>Math.ceil()</strong>, que arredondava números para cima, não importa o valor depois da vírgula!</p><figure><img src=https://i.imgur.com/9C36haN.png style=width:300px alt=funcionamento-do-math.ceil-e-math.floor /><figcaption>Funcionamento do math.ceil() e math.floor().</figcaption></figure><p>O principal aprendizado dessa história não foi um novo método JavaScript, e sim ter em mente que sempre  pode haver um método que resolve nosso atual problema e que provavelmente ainda não conhecemos.</p><p>Preste atenção no método que está tentando empregar e responda: “vou precisar de uma equação muito complexa e com vários métodos pra resolver isso?”. Se o seu problema parece simples e ainda assim a resposta for “sim”, provavelmente algum outro método que você desconhece pode te ajudar.</p><p>Tendo em mente o mantra “pode haver um único método que resolva meu problema”, aqui vai uma <a href=https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Math target=_blank>lista de métodos matemáticos em JavaScript</a>. Você não deve e nem precisa decorar todos eles, mas leia-os atentamente, pensando nos tipos de problema que você pode resolver usando-os e, futuramente quando se deparar com algum deles, irá se lembrar de procura-los novamente.</p><p>Bons estudos!</p>"
  },
  {
    "title": "Aplicando os conceitos de metodologia ágil aos estudos",
    "type": "post",
    "date": "18/12/21",
    "slug": "estudo-agil",
    "tags": ["educação", "dicas"],
    "html": "<p>Todos sabemos a importância do estudo em nossas carreiras, mas poucos se dão conta da importância de se procurar métodos ágeis para turbinar esse momento tão especial.</p><p>Principalmente para aqueles que precisam dividir o seu tempo entre várias atividades, como trabalho, escola, etc., torna-se imprescindível encontrar a maneira mais eficaz de extrair conhecimento do tão precioso tempo de estudos.</p> <p>Para te ajudar a organizar melhor os estudos, estarei mostrando meus próprios métodos de organização(no qual acabei levando também para o trabalho).</p><h3>Adaptando métodos já estabelecidos ao nosso modo de vida</h3><p>Se você pesquisar um pouco sobre metodologias ágeis, dará de cara com o <strong>Scrum</strong>, uma metodologia muito usada em empresas para aumentar a produtividade no trabalho. Esse pode nos auxiliar e muito ao longo prazo durante os nossos estudos.</p><h3>Refatorando o scrum</h3><p>É claro que você não vai organizar seus estudos utilizando todos os passos do Scrum. Trata-se de basear-se no método para aumentar o tempo de foco no conteúdo. Os conceitos extraídos do Scrum que eu achei mais proveitoso adaptar aos meus estudos são a <strong>sprint</strong> e a <strong>daily</strong>.</p><h3>Sprint e a divisão de tempo</h3><p>O segredo é dividir seus estudos em intervalos específicos de tempo, como se fossem caixinhas onde você guarda seu precioso foco. Por exemplo, o sprint citado acima é a maior caixinha de tempo possível, onde você vai organizar seus estudos pelas próximas X dailies(pessoalmente, eu gosto de utilizar sprints de 6 dias ou dailies, tirando um dia para descansar).</p><h3>Daily</h3><p>Originalmente, a daily se trata de uma reunião diária no sistema scrum, mas vamos adaptar o seu significado às nossas necessidades. A partir de agora, vamos usar o termo daily para designar a caixa de tempo que abrange um dia inteiro de estudos.</p><p>Durante uma daily, temos um tempo limitado para conduzirmos nossos estudos. Por isso, podemos utilizar uma outra ferramenta super poderosa, o <strong>pomodoro</strong>.</p><h3>Pomodoro, uma jóia do infinito em nossos estudos</h3><p>Todos sabem o quão cansativo pode ser ficar horas estudando, sentado(a) na tela do computador ou com a cara enfiada nos livros, mas há uma forma de hackear nosso cérebro para estudar horas e horas sem ao menos se dar conta.</p><div class=center><figure><img src=https://i.imgur.com/Aho6YWR.jpg alt=esquema-pomodoro></figure></div><p>A técnica pomodoro consiste no seguinte: divide-se o tempo em caixinhas de 30 minutos, separando 25 minutos para o foco total nos estudos e os últimos 5 minutinhos para um descanso curto, sendo cada ciclo estudo-descanso considerado um pomodoro concluído.</p><p>Na verdade, não precisa ser religiosamente 25 por 5. Alguns pomodoros serão mais efetivos que outros, podendo durar mais tempo (ou menos) dependendo do foco empreendido. Mas a pequena pausa é importantíssima! Ela é o escape que nos impede de ficar exaustos de tanto estudar, mas não exagere! 5 minutinhos apenas! Dê uma volta pela casa, beba uma água e pratique algum exercício físico(eu gosto muito de pular corda nos intervalos). A cada 4 pomodoros concluídos, você pode dar-se um merecido descanso de até 15 minutos, e assim sucessivamente, até o fim da daily.</p><h3>Panorama geral da divisão do tempo</h3><p>Bem, nosso esquema fica mais ou menos assim:</p><div class=center><figure><img src=https://i.imgur.com/MFyDM5E.png alt=esquema-de-estudos /><figcaption>Um sprint ilustrativo de 6 dailies contendo uma quantidade ilustrativa de pomodoros que você pode adaptar ao seu dia-a-dia.</figcaption></figure></div><p>Agora que você conhece os conceitos (totalmente deturpados por mim) de Scrum, sprint, daily e pomodoro, pode utilizar essas ferramentas poderosas no seu dia-a-dia de estudos. Note que nos primeiros dias pode parecer que você não está produzindo tanto, mas em pouco tempo você notará que está estudando com muito mais eficiência. Eu comecei a dar notas de 0 a 10 pra cada pomodoro de acordo com o meu foco e fui de uma média de 6/10 para 9/10 em poucas semanas. Não desista!</p><h3>Algumas dicas finais</h3><p>Planeje as sprints e as inicie na segunda-feira, estipule uma meta de pomodoros para as dailies e, se puder, anote-os em um diário dando notas para acompanhar sua evolução.</p><p>Tenha horários definidos para o estudo diário. Não estude apenas quando der, planeje o momento sagrado  de estudo como algo inadiável. Entenda que é seu futuro que está em jogo.</p><p>Tenha cuidado com o foco durante os pomodoros, nada de acessar redes sociais ou qualquer coisa do tipo! Se puder evitar durante os descansos curtos, também é uma boa.</p><p>Pesquise mais sobre metodologias ágeis, elas são bastante cobradas em entrevistas de emprego e pode ser muito interessante para você entender a lógica por trás das sprints, dailies, etc.</p><p>Bons estudos!</p>"
  },
  {
    "title": "Iniciando os estudos de front-end: onde focar?",
    "type": "post",
    "date": "05/12/21",
    "slug": "estudando-front-end",
    "tags": ["educação", "dicas", "JavaScript", "CSS", "HTML"],
    "html": "<p>Lembrando de tudo pelo qual passei nos primeiros meses como estudante de front-end, venho me questionando sobre como poderia ajudar aqueles que estão na mesma situação no qual estive.  Não sendo um especialista, ainda assim me dou o direito de tentar ajudar aqueles que estão dando os primeiros passos na área.</p><p>Muito se diz sobre &#34;pegar a base&#34;, mas essa pode ser uma tarefa complicada quando não sabemos de que isso se trata. Sabendo disso, espero que eu te ajude com essas dicas abaixo. Focarei no estudo das três principais tecnologias da área: HTML, CSS, e JavaScript.<div class=center><figure><img src=https://i.imgur.com/oGfxvOF.jpg alt= /></figure></div></p><h3>HTML</h3><p><strong>Semântica, semântica e semântica:</strong> logo nas primeiras aulas de front-end, é bastante simples compreender o funcionamento do HTML, suas tags, classes, etc. Entretanto, a semântica é uma parte nada trivial do estudo de HTML.</p><p>Você pode tranquilamente renderizar um website usando milhões de &#8249;div&#8250;, &#8249;h1&#8250; e &#8249;img&#8250;, mas saiba desde agora que o uso das tags de forma desordenada pode (e vai) afetar e muito os mais diversos aspectos do seu trabalho, como a otimização para motores de busca (seo) ou futuras reparações em seu projeto.</p><p><strong>Nomeando classes e IDs:</strong> uma das coisas que eu queria ter conhecimento desde o início dos meus estudos em front-end é a <a href=https://www.alura.com.br/artigos/criando-componentes-css-com-padrao-bem target=_blank><strong>metodologia BEM</strong></a>. Se trata de uma maneira de padronizar as classes e IDs dos componentes que criamos, a fim de facilitar sua estilização sem confundir classes e nem repeti-las.</p><p><strong>Questione-se:</strong> como faço para renderizar uma imagem com legenda, um texto completo ou um menu de navegação?</p><h3>CSS</h3><p><strong>Propriedades principais:</strong> no início, somos tentados a aprender certas ferramentas que agilizam a estilização com CSS. Alguns frameworks como SASS ou Styled-Components podem facilitar bastante a vida do desenvolvedor, mas o iniciante pode não se beneficiar tanto deles se não souber utilizar as principais propriedades no CSS vanilla. Por isso, <strong>foque primeiro nas propriedades antes das ferramentas</strong>.</p><p><strong>Flexbox e grid:</strong> essas duas propriedades de posicionamento te acompanharão para sempre nos estudos e trabalhos de front-end. Por isso, estude muito bem qual a maneira correta de usar ambos os modos de posicionamento. Saiba quais propriedades usar nos elementos pais e nos elementos filhos e, combinando com outras propriedades de forma eficiente, você irá para o próximo nível de conhecimento em estilização!</p><h3>JavaScript</h3><p><strong>Métodos e laços:</strong> uma das coisas que mais uso em meu trabalho atual são métodos de array, principalmente o <strong>map</strong>. Portanto, considero de extrema importância que isso não fique de lado em seus estudos. Faça muitos projetinhos pessoais com arrays de todos os tipos e tente manipular as informações usando os mais diversos métodos.</p><p><strong>Funções e módulos:</strong> lidar com módulos em JavaScript será uma constante em sua carreira de front-ender. Por isso, entender como funcionam os imports e exports, usando-os da forma correta, deixará seu código muito mais limpo e organizado. Treine bastante e crie códigos descentralizados, com componentes únicos em arquivos separados, exportando-os da maneira correta e logo estará um passo além em JavaScript.</p><h3>Algumas dicas finais</h3><p><strong>Apenas uma etapa: </strong>tenha em mente que nesse momento é normal que você não saiba muitas coisas no desenvolvimento web, portando, aproveite o tempo de aprendizado. Aprender melhor não é necessariamente aprender rápido, tenha calma!.</p><p><strong>Nada será perdido, mas nada permanecerá:</strong> também acho muito importante entender que aquilo que aprendemos nos primeiros meses de estudo é muito diferente daquilo que vemos no mercado de trabalho. Sabendo disso, algumas dúvidas que acabam nos incomodando perdem um pouco de importância, como por exemplo &#65282;se eu importar muitos arquivos CSS no meu HTML, meu site vai ficar pesado?&#65282;. Não se preocupe com essas coisas, pois todos os códigos de iniciantes são &#65282;feios&#65282;. Apenas foque em aprender as linguagens de forma otimizada e sua jornada será muito gratificante!</p><p>Boa sorte em seus estudos!</p>"
  }
]